name: Android CI

on:
  workflow_dispatch:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CCACHE_DIR: ${{ github.workspace }}/.ccache
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: true
      CCACHE_MAXSIZE: 1G
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: 'recursive'
          fetch-depth: 0

      - name: Setup JDK
      #  uses: actions/setup-java@v1
        uses: actions/setup-java@v3
      #  uses: actions/setup-java@v4
        with:
      #    distribution: 'temurin'
          java-version: 1.8
      #    java-version: 17
      #    java-version: '21'
          cache: 'gradle'

      - name: Checkout libxposed/api
        uses: actions/checkout@v4
        with:
          repository: libxposed/api
          ref: 64e29bd657ef4d2540b34402f5a988778f29e676
          path: libxposed/api
          fetch-depth: 0

      - name: Retrieve version
        run: |
          echo VERSION=$(echo ${{ github.event.head_commit.id }} | head -c 10) >> $GITHUB_ENV

      - name: Set up ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          key: ${{ runner.os }}-${{ github.sha }}
          restore-keys: ${{ runner.os }}

      - name: Build with Gradle
        run: |
          echo 'org.gradle.caching=true' >> gradle.properties
          echo 'org.gradle.parallel=true' >> gradle.properties
          echo 'org.gradle.vfs.watch=true' >> gradle.properties
          echo 'org.gradle.jvmargs=-Xmx2048m' >> gradle.properties
          echo 'android.native.buildOutput=verbose' >> gradle.properties
          chmod a+rx gradlew
          #./gradlew --info -PappVerName=${{ env.VERSION }} assembleRelease assembleDebug
          #./gradlew -PappVerName=${{ env.VERSION }} build
          ./gradlew -PappVerName=${{ env.VERSION }} assembleRelease

      #- name: Setup tmate live debug session
      #  if: failure()
      #  uses: mxschmitt/action-tmate@v3
      #  timeout-minutes: 3

      # sign APK
      #- uses: AoEiuV020/sign-android-release@v2
      #  name: Sign hook APK
      #  env:
      #    SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
      #  if: ${{ env.SIGNING_KEY != '' }}
      #  with:
      #    releaseDirectory: build/outputs/apk/release
      #    signingKeyBase64: ${{ secrets.SIGNING_KEY }}
      #    alias: ${{ secrets.ALIAS }}
      #    keyStorePassword: ${{ secrets.KEY_STORE_PASSWORD }}
      #    keyPassword: ${{ secrets.KEY_PASSWORD }}

      #- name: Android Sign
      #  # You may pin to the exact commit or the version.
      #  # uses: Tlaster/android-sign@1c5bf4b2fa309acb0c0ae0bf9379ab458f14d5b1
      #  uses: Tlaster/android-sign@v1.2.2
      #  with:
      #    # The directory to find your release to sign
      #    releaseDirectory: 
      #    # The key used to sign your release in base64 encoded format
      #    signingKeyBase64: 
      #    # The key alias
      #    alias: 
      #    # The password to the keystore
      #    keyStorePassword: 
      #    # The password for the key
      #    keyPassword: # optional
      #    # The working directory for action, default to build
      #    buildDirectory: # optional
      #    # The output directory for sign, default to build/signed
      #    output: # optional

      - name: Upload built apk
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: snapshot.${{ env.VERSION }}.zip
          path: |
              build/outputs/apk/debug/*.apk
              build/outputs/apk/release/*.apk

      #- name: Post to channel
        #if: github.ref == 'refs/heads/master'
        #env:
          #CHANNEL_ID: ${{ secrets.TELEGRAM_TO }}
          #BOT_TOKEN: ${{ secrets.TELEGRAM_TOKEN }}
          #FILE: app/release/BiliRoaming_${{ env.VERSION }}.apk
          #COMMIT_MESSAGE: |+
            #New push to github\!
            #```
            #${{ github.event.head_commit.message }}
            #```by `${{ github.event.head_commit.author.name }}`
            #See commit detail [here](${{ github.event.head_commit.url }})
            #Snapshot apk is attached \(unsupported by TAICHI\)
        #run: |
          #ESCAPED=`python3 -c 'import json,os,urllib.parse; print(urllib.parse.quote(json.dumps(os.environ["COMMIT_MESSAGE"])))'`
          #curl -v "https://api.telegram.org/bot${BOT_TOKEN}/sendMediaGroup?chat_id=${CHANNEL_ID}&media=%5B%7B%22type%22:%22document%22,%20%22media%22:%22attach://release%22,%22parse_mode%22:%22MarkdownV2%22,%22caption%22:${ESCAPED}%7D%5D"  -F release="@$FILE"
